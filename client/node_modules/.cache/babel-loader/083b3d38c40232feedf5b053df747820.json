{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/sebastienlecaille/programmation/web/memory/client/src/components/Board/Board.js\";\nimport Square from '../Square/Square.js';\nimport Grid from '@material-ui/core/Grid';\nimport PropTypes from 'prop-types';\n\nfunction DispCase({\n  fruit,\n  onClick\n}) {\n  return /*#__PURE__*/_jsxDEV(Square, {\n    fruit: fruit,\n    onClick: () => onClick(fruit)\n  }, fruit.k, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 3\n  }, this);\n}\n\n_c = DispCase;\n\nfunction FormRow({\n  start,\n  row_size,\n  donne,\n  onClick\n}) {\n  var row = [];\n\n  for (let i = start; i < start + row_size; i++) {\n    row.push( /*#__PURE__*/_jsxDEV(DispCase, {\n      fruit: donne[i],\n      onClick: onClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    item: true,\n    xs: \"auto\",\n    spacing: 2,\n    direction: \"row\",\n    children: row\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 3\n  }, this);\n}\n\n_c2 = FormRow;\nFormRow.defaultProps = {};\nFormRow.propTypes = {\n  start: PropTypes.number\n};\n\nfunction Board({\n  donne,\n  onClick\n}) {\n  //--------------------------\n  console.log(donne.length);\n  console.log(Math.sqrt(donne.length));\n  const col_size = Math.round(Math.sqrt(donne.length));\n  const line_size = Math.round(Math.sqrt(donne.length));\n  console.log(\"COL SIZE = \" + col_size);\n  const grid = [];\n  let i = 0;\n\n  for (; i < col_size - 2; i++) //0 1\n  {\n    //0 3\n    //3\n    console.log(\"start: \" + i * line_size + \" size: \" + line_size);\n    grid.push( /*#__PURE__*/_jsxDEV(FormRow, {\n      donne: donne,\n      start: i * line_size,\n      row_size: line_size,\n      onClick: onClick\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this));\n  } //6=> 10\n\n\n  console.log(\"start: \" + i * line_size + \" size: \" + line_size * i);\n  grid.push( /*#__PURE__*/_jsxDEV(FormRow, {\n    donne: donne,\n    start: i * line_size,\n    row_size: donne.length - i * line_size\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 12\n  }, this));\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    item: true,\n    xs: \"auto\",\n    spacing: 1,\n    direction: \"column\",\n    children: grid\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 4\n  }, this);\n}\n\n_c3 = Board;\nexport default Board;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"DispCase\");\n$RefreshReg$(_c2, \"FormRow\");\n$RefreshReg$(_c3, \"Board\");","map":{"version":3,"sources":["/Users/sebastienlecaille/programmation/web/memory/client/src/components/Board/Board.js"],"names":["Square","Grid","PropTypes","DispCase","fruit","onClick","k","FormRow","start","row_size","donne","row","i","push","defaultProps","propTypes","number","Board","console","log","length","Math","sqrt","col_size","round","line_size","grid"],"mappings":"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","sourcesContent":["import Square from '../Square/Square.js'\nimport Grid from '@material-ui/core/Grid';\nimport PropTypes from 'prop-types'\n\nfunction DispCase({fruit, onClick})\n{\n\treturn (\n\t\t<Square key={fruit.k} fruit={fruit} onClick={() => onClick(fruit)}/> \n\t);\n}\n\nfunction FormRow({start, row_size, donne, onClick}) {\n\n    var row = [];\n    for (let i = start; i < start + row_size; i++)\n    {\n\t  row.push(<DispCase fruit={donne[i]} onClick={onClick} />)\n    }\n\treturn (\n\t\t<Grid container item xs=\"auto\" spacing={2} direction='row'>\n\t\t    {row}\n\t\t</Grid>\n\t);\n}\nFormRow.defaultProps = {\n\n}\nFormRow.propTypes = {\n\tstart: PropTypes.number,\n}\n\nfunction Board({donne, onClick})\n{ \n\n//--------------------------\n\tconsole.log(donne.length);\n\tconsole.log(Math.sqrt(donne.length));\n\tconst col_size = Math.round(Math.sqrt(donne.length));\n\tconst line_size = Math.round(Math.sqrt(donne.length));\n\tconsole.log(\"COL SIZE = \" + col_size);\n\tconst grid = [];\n\tlet i = 0;\n\tfor (; i < col_size - 2; i++)//0 1\n\t{//0 3\n\t\t//3\n\t\tconsole.log(\"start: \" + (i * line_size) + \" size: \" + (line_size));\n\t\tgrid.push(<FormRow key={i} donne={donne} start={i * line_size} row_size={line_size} onClick={onClick}/>);\n\t}\n\t//6=> 10\n\tconsole.log(\"start: \" + (i * line_size) + \" size: \" + (line_size * i));\n\tgrid.push(<FormRow donne={donne} start={i * line_size} row_size={donne.length - (i * line_size)}/> )\n\treturn (\n\t\t\t<Grid container item xs=\"auto\" spacing={1} direction='column'>\n\t\t\t\t{grid}\n\t\t\t</Grid>\n        );\n}\n\nexport default Board;"]},"metadata":{},"sourceType":"module"}